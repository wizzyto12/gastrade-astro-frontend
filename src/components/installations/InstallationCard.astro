---
import type {
    InstallationGetInstallationsResponses,
    PluginUploadFileDocument,
} from "~/lib/client";

interface Props {
    installation: InstallationGetInstallationsResponses[200]["data"][number];
    strapiUrl: string;
}

const { installation, strapiUrl } = Astro.props as Props;

function buildMediaUrl(media?: PluginUploadFileDocument | null): string | null {
    if (!media?.url) {
        return null;
    }

    if (media.url.startsWith("http")) {
        return media.url;
    }

    return `${strapiUrl ?? ""}${media.url}`;
}

const coverImage = installation.gallery?.[0];
const coverUrl = buildMediaUrl(coverImage);
const brandName = installation.car?.model?.brand?.name ?? installation.car?.model?.name ?? "";
const modelName = installation.car?.model?.name ?? "";
const carName = [brandName, modelName].filter(Boolean).join(" ");
const year = installation.car?.year ?? "";
const engine = installation.car?.engine ?? "";

const tagCandidates = [
    carName || null,
    installation.lpg_reducer?.lpg_brand?.name ?? installation.lpg_reducer?.name ?? null,
    year || engine ? [year, engine].filter(Boolean).join(" · ") : null,
].filter(Boolean) as string[];

const summaryParts = [
    installation.lpg_ecus?.name,
    installation.lpg_injector?.name,
    installation.lpg_reducer?.name,
    installation.lpg_tank?.name,
].filter(Boolean);

const summary = summaryParts.length > 0
    ? summaryParts.join(" • ")
    : "Професионален монтаж и настройка.";
---

<article class="group overflow-hidden rounded-2xl border border-zinc-200 bg-white shadow-sm transition hover:-translate-y-1 hover:shadow-md">
    <a href={`/installations/${installation.documentId}`} class="flex h-full flex-col">
        <div class="aspect-[4/3] w-full overflow-hidden bg-zinc-100">
            {coverUrl ? (
                <img
                    src={coverUrl}
                    alt={coverImage?.alternativeText ?? coverImage?.caption ?? (carName || "Инсталация")}
                    loading="lazy"
                    class="h-full w-full object-cover transition duration-300 group-hover:scale-105"
                />
            ) : (
                <div class="flex h-full items-center justify-center text-sm font-medium text-zinc-500">
                    Без изображение
                </div>
            )}
        </div>
        <div class="flex grow flex-col gap-3 p-5">
            {tagCandidates.length > 0 && (
                <div class="flex flex-wrap gap-2 text-xs">
                    {tagCandidates.map((tag) => (
                        <span class="rounded-full bg-zinc-100 px-2 py-1" key={tag}>{tag}</span>
                    ))}
                </div>
            )}
            <h3 class="font-semibold leading-tight">
                {carName || "Монтаж на газова уредба"}
                {year && <span class="ml-1 text-sm text-zinc-500">{year}</span>}
            </h3>
            <p class="line-clamp-2 text-sm text-zinc-600">{summary}</p>
            <span class="mt-auto inline-flex items-center gap-2 text-sm font-semibold text-violet-700">
                Виж детайли
                <svg class="size-4" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path
                        fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 0 1 1.414 0L13 11.586V7a1 1 0 1 1 2 0v7a1 1 0 0 1-1 1H7a1 1 0 1 1 0-2h4.586L4.293 5.707a1 1 0 0 1 0-1.414z"
                        clip-rule="evenodd"
                    />
                </svg>
            </span>
        </div>
    </a>
</article>
